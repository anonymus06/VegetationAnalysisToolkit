% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Utilities.R
\name{create_combined_cci}
\alias{create_combined_cci}
\title{Create a Combined CCI DataFrame with Optional Filtering}
\usage{
create_combined_cci(
  all_data,
  apply_cci_filter = FALSE,
  lower_limit = NULL,
  upper_limit = NULL
)
}
\arguments{
\item{all_data}{A list of data frames containing CCI data.}

\item{apply_cci_filter}{A logical value indicating whether CCI filtering should be applied. If TRUE, the function filters CCI values based on the specified lower and upper limits.}

\item{lower_limit}{The lower limit for CCI filtering. Only CCI values greater than this limit will be included in the final data frame if filtering is applied.}

\item{upper_limit}{The upper limit for CCI filtering. Only CCI values less than this limit will be included in the final data frame if filtering is applied.}
}
\value{
A data frame combining all CCI data with optional filtering applied.
}
\description{
Create a Combined CCI DataFrame with Optional Filtering
}
\details{
The function first combines all CCI data frames from the input list into a single data frame.
         It then selects specific columns to retain in the final combined data frame. The `Sample` column is removed as it might be redundant.
         The function allows for optional CCI value filtering. If `apply_cci_filter` is set to TRUE and both `lower_limit` and `upper_limit` are provided,
         the function filters the combined data frame to include only the rows where CCI values fall within the specified range.
         This is beneficial for focusing on CCI values of interest by excluding outliers or values outside a specific range.
}
\note{
It's important to ensure the input list `all_data` contains data frames structured to include a `CCI` column.
       If there are specific `Code` values that the algorithm might not handle properly, consider keeping the `Code` column in the analysis for troubleshooting.
}
